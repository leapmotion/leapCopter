// Generated by CoffeeScript 1.6.3
(function() {
  Leap.Controller.plugin('handActive', function(options) {
    options || (options = {});
    options.activeThreshold = 0.75;
    return {
      finger: {
        active: function() {
          if (this._active) {
            return this._active;
          }
          this.palmDot = Leap.vec3.dot(this.hand().direction, this.direction);
          this._active = this.palmDot > options.activeThreshold;
          return this._active;
        }
      },
      hand: function(hand) {
        var avgPalmDot, finger, fingerActiveCount, minFingerDelta, sumFingerDelta, _i, _len, _ref;
        if (hand.timeVisible === 0) {
          return;
        }
        sumFingerDelta = 0;
        minFingerDelta = Infinity;
        avgPalmDot = 0;
        fingerActiveCount = 0;
        _ref = hand.fingers;
        for (_i = 0, _len = _ref.length; _i < _len; _i++) {
          finger = _ref[_i];
          if (finger.active()) {
            fingerActiveCount += 1;
          }
          avgPalmDot += finger.palmDot;
        }
        hand.avgPalmDot += 0.5 * (5 - hand.fingers.length);
        hand.avgPalmDot = hand.avgPalmDot / 5;
        if (hand.avgPalmDot > options.activeThreshold || fingerActiveCount > 2) {
          if (hand.data('hasBeenSeenInactive')) {
            if (!hand.data('active')) {
              hand.data({
                active: true
              });
              this.emit('handActive', hand);
            }
          }
        } else {
          hand.data('hasBeenSeenInactive', true);
          if (hand.data('active')) {
            this.emit('handInactive', hand);
            hand.data({
              active: false
            });
          }
        }
        return hand.active = hand.data('active');
      }
    };
  });

}).call(this);
